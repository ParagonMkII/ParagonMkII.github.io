<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Paragon Blog</title><link>https://ParagonMkII.github.io</link><description>Change the world</description><copyright>Paragon Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/103414093?v=4</url><title>avatar</title><link>https://ParagonMkII.github.io</link></image><lastBuildDate>Thu, 17 Oct 2024 08:47:11 +0000</lastBuildDate><managingEditor>Paragon Blog</managingEditor><ttl>60</ttl><webMaster>Paragon Blog</webMaster><item><title>Android Studio记录</title><link>https://ParagonMkII.github.io/post/Android%20Studio-ji-lu.html</link><description>在MainActivity中，如果将&#13;
&#13;
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#13;
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#13;
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#13;
            return insets;&#13;
        });&#13;
&#13;
删除，那么状态栏就可以达到与工具栏颜色相同&#13;
如果未删除，则与页面背景颜色相同。</description><guid isPermaLink="true">https://ParagonMkII.github.io/post/Android%20Studio-ji-lu.html</guid><pubDate>Thu, 17 Oct 2024 08:44:37 +0000</pubDate></item><item><title>LZZExercise3</title><link>https://ParagonMkII.github.io/post/LZZExercise3.html</link><description># 第一步&#13;
1.创建项目，点击Empty Views Activity&#13;
2.选择Java语言&#13;
3.RGB取色网站推荐https://link.fobshanghai.com/rgbcolor.htm&#13;
# 第二步&#13;
## 创建工具栏&#13;
2.1 打开app/res/layout/activity_main.xml&#13;
&#13;
**删除掉hello world的代码块**&#13;
&#13;
写入代码&#13;
&#13;
    &lt;androidx.appcompat.widget.Toolbar&#13;
        android:id='@+id/toolbar'&#13;
        android:layout_width='match_parent'&#13;
        android:layout_height='?attr/actionBarSize'&#13;
        android:background='?attr/colorPrimary'&#13;
        app:title='21251109999_XXX_25DatePicker26Intent'&#13;
        app:titleTextColor='@android:color/white'/&gt;&#13;
&#13;
将title内容改为自己的学号和姓名&#13;
&#13;
## 修改整体布局&#13;
&#13;
2.2 将`&lt;?xml version='1.0' encoding='utf-8'?&gt;`下方的一大块代码修改为：&#13;
&#13;
    &lt;LinearLayout xmlns:android='http://schemas.android.com/apk/res/android'&#13;
    xmlns:app='http://schemas.android.com/apk/res-auto'&#13;
    xmlns:tools='http://schemas.android.com/tools'&#13;
    android:id='@+id/main'&#13;
    android:layout_width='match_parent'&#13;
    android:layout_height='match_parent'&#13;
    android:background='@drawable/你的图片名字'&#13;
    android:orientation='vertical'&#13;
    tools:context='.MainActivity'&gt;&#13;
&#13;
2.3 将文件最后一行代码修改为`&lt;/LinearLayout&gt;`&#13;
&#13;
## 加入输入框&#13;
2.4 在工具栏代码块下方写入：&#13;
&#13;
**文字大小例子：10dp**&#13;
**`layout_marginTop`可以修改不同模块之间的间隔距离，例如：30dp**&#13;
**`textStyle`可以将文字修改为粗体或者斜体**&#13;
&#13;
        &lt;EditText&#13;
            android:id='@+id/EditText'&#13;
            android:layout_width='match_parent'&#13;
            android:layout_height='wrap_content'&#13;
            android:text='请输入你的姓名'&#13;
            android:textSize='输入你的文字大小'&#13;
            android:textColor='#输入你的颜色代码'/&gt;&#13;
&#13;
 修改完大小可以预览&#13;
&#13;
## 加入文字框&#13;
2.5 在edittext代码块下方写入：&#13;
&#13;
        &lt;TextView&#13;
            android:id='@+id/TextView'&#13;
            android:layout_marginTop='15dp'&#13;
            android:layout_width='match_parent'&#13;
            android:layout_height='wrap_content'&#13;
            android:text='请选择您的出生日期：'&#13;
            android:textSize='输入你的文字大小'&#13;
            android:textColor='#输入颜色代码'/&gt;&#13;
&#13;
## 加入选择日期模块&#13;
2.6 在TextView代码块下方写入&#13;
&#13;
        &lt;DatePicker&#13;
            android:id='@+id/DatePicker'&#13;
            android:layout_marginTop='15dp'&#13;
            android:layout_width='wrap_content'&#13;
            android:layout_height='wrap_content'&#13;
            android:calendarViewShown='false'&#13;
            android:background='#输入颜色代码'/&gt;&#13;
&#13;
## 加入跳转按钮&#13;
2.7在DatePicker代码块下方写入&#13;
&#13;
        &lt;android.widget.Button&#13;
            android:id='@+id/Button'&#13;
            android:textColor='修改你的颜色'&#13;
            android:background='#修改你的颜色'&#13;
            android:layout_marginTop='修改你的间隔'&#13;
            android:layout_width='match_parent'&#13;
            android:layout_height='wrap_content'&#13;
            android:gravity='center'&#13;
            android:textSize='修改你的文字大小'&#13;
            android:fontFamily='serif-monospace'&#13;
            android:text='单击跳转到下一页'&#13;
            android:textStyle='修改文字样式'&#13;
            android:layout_gravity='center_horizontal' /&gt;&#13;
&#13;
# 第三步&#13;
## 导入图片&#13;
3.1 在Android Studio中打开app/res/drawable文件夹&#13;
&#13;
3.2 右键这个文件夹并点击“打开于”再点击“资源管理器”&#13;
&#13;
3.3 将你的照片导入该文件夹（复制进去）并注意将**2.2步骤**中的`android:background='@drawable/你的图片名字'`修改为你图片的名字&#13;
**例如我将点击按钮前的照片名字改为before，点击按钮后的照片名字改为after**&#13;
&#13;
# 第四步&#13;
## 修改MainActivity文件&#13;
4.1 打开app/java/com.example.你的项目名文件夹&#13;
&#13;
**4.2 打开MainActivity文件**&#13;
&#13;
4.3 在`package com.examle.项目名;`下方写入：&#13;
对照一下，保证有以下的库&#13;
&#13;
    import android.os.Bundle;&#13;
    import androidx.activity.EdgeToEdge;&#13;
    import androidx.appcompat.app.AppCompatActivity;&#13;
    import androidx.core.graphics.Insets;&#13;
    import androidx.core.view.ViewCompat;&#13;
    import androidx.core.view.WindowInsetsCompat;&#13;
    import android.widget.EditText;&#13;
    import android.content.Intent;&#13;
    import android.view.View;&#13;
    import android.widget.Button;&#13;
    import android.widget.DatePicker;&#13;
&#13;
4.4 在`public class MainActivity extends AppCompatActivity {`下一行写入&#13;
    //第一步，定义对象&#13;
&#13;
    Button button;&#13;
    EditText editview;&#13;
    DatePicker datePicker;&#13;
    int year;&#13;
    int month;&#13;
    int day;&#13;
&#13;
4.5 在&#13;
&#13;
    @Override&#13;
    protected void onCreate(Bundle savedInstanceState) {&#13;
        super.onCreate(savedInstanceState);&#13;
        EdgeToEdge.enable(this);&#13;
        setContentView(R.layout.activity_main);&#13;
&#13;
下方写入&#13;
&#13;
        //第二步，绑定控件&#13;
        button = findViewById(R.id.Button);&#13;
        editview = findViewById(R.id.EditText);&#13;
        datePicker = findViewById(R.id.DatePicker);&#13;
&#13;
        //第三步，按钮单击事件&#13;
        button.setOnClickListener(new View.OnClickListener() {&#13;
            //页面跳转逻辑&#13;
            @Override&#13;
            public void onClick(View view) {&#13;
                //记录日期&#13;
                year = datePicker.getYear();&#13;
                month = datePicker.getMonth();&#13;
                day = datePicker.getDayOfMonth();&#13;
&#13;
                //设置意图&#13;
                Intent intent = new Intent(MainActivity.this, SecondActivity.class);&#13;
                intent.putExtra('info',editview.getText().toString());&#13;
                intent.putExtra('Selected_date',year + '年' + (month+1) + '月' + day + '日');&#13;
                startActivity(intent);&#13;
            }&#13;
        });&#13;
&#13;
**月份需要+1是因为这里的月份是从0开始计算（即0月表示1月）**&#13;
&#13;
# 第五步&#13;
## 创建新的页面&#13;
5.1 打开“app/java/com.example.你的项目名”文件夹&#13;
&#13;
5.2 右键这个文件夹，点击“新建”，再点击“Activity”，再点击'Empty Views Activity'&#13;
然后我命名为SecondActivity，你想命名啥都行&#13;
&#13;
**5.3 打开app/res/layout/activity_second.xml文件（名字不同可能是你命名不同，总之点击新的文件）**&#13;
&#13;
## 修改布局&#13;
5.4  将`&lt;?xml version='1.0' encoding='utf-8'?&gt;`下方的一块布局代码改为：&#13;
&#13;
    &lt;LinearLayout xmlns:android='http://schemas.android.com/apk/res/android'&#13;
    xmlns:app='http://schemas.android.com/apk/res-auto'&#13;
    xmlns:tools='http://schemas.android.com/tools'&#13;
    android:id='@+id/main'&#13;
    android:layout_width='match_parent'&#13;
    android:layout_height='match_parent'&#13;
    android:orientation='vertical'&#13;
    android:background='@drawable/你的图片名字'&#13;
    tools:context='.SecondActivity'&gt;&#13;
&#13;
**此处需要修改背景图片**&#13;
&#13;
5.5 将这个文件的最后一行代码改为`&lt;/LinearLayout&gt;`&#13;
&#13;
5.6 在布局代码块下方写入：&#13;
&#13;
    &lt;androidx.appcompat.widget.Toolbar&#13;
        android:id='@+id/toolbar'&#13;
        android:layout_width='match_parent'&#13;
        android:layout_height='?attr/actionBarSize'&#13;
        android:background='?attr/colorPrimary'&#13;
        app:title='21251109999_XXX_25DatePicker26Intent'&#13;
        app:titleTextColor='@android:color/white'/&gt;&#13;
&#13;
    &lt;TextView&#13;
        android:id='@+id/TextView_2'&#13;
        android:layout_width='match_parent'&#13;
        android:layout_height='wrap_content'&#13;
        android:layout_marginTop='20dp'&#13;
        android:text='传递接收的数值'&#13;
        android:textSize='修改文字大小'&#13;
        android:textStyle='修改文字样式'&#13;
        android:textColor='修改文字颜色'/&gt;&#13;
&#13;
    &lt;TextView&#13;
        android:id='@+id/TextView_3'&#13;
        android:layout_width='match_parent'&#13;
        android:layout_height='wrap_content'&#13;
        android:layout_marginTop='修改上下间隔'&#13;
        android:textStyle='修改文字样式'&#13;
        android:text='出生日期'&#13;
        android:textSize='修改文字大小'&#13;
        android:textColor='修改文字颜色'/&gt;&#13;
&#13;
# 第六步&#13;
## 让新的页面接收数据&#13;
&#13;
6.1 打开app/java/com.example.你的项目名文件夹&#13;
&#13;
6.2 打开SecondActivity（你新建页面的名字）&#13;
&#13;
6.3 保证有以下的库：&#13;
&#13;
    import android.os.Bundle;&#13;
&#13;
    import androidx.activity.EdgeToEdge;&#13;
    import androidx.appcompat.app.AppCompatActivity;&#13;
    import androidx.core.graphics.Insets;&#13;
    import androidx.core.view.ViewCompat;&#13;
    import androidx.core.view.WindowInsetsCompat;&#13;
    import android.widget.TextView;&#13;
&#13;
6.4 在`public class SecondActivity extends AppCompatActivity {`下方写入&#13;
&#13;
    //定义对应&#13;
    TextView textView_2;&#13;
    TextView textView_3;&#13;
&#13;
6.5 在&#13;
&#13;
    @Override&#13;
    protected void onCreate(Bundle savedInstanceState) {&#13;
        super.onCreate(savedInstanceState);&#13;
        EdgeToEdge.enable(this);&#13;
        setContentView(R.layout.activity_second);&#13;
&#13;
的下方写入：&#13;
&#13;
        //绑定控件&#13;
        textView_2 = findViewById(R.id.TextView_2);&#13;
        textView_3 = findViewById(R.id.TextView_3);&#13;
        //接收数据，并使用变量提取数据&#13;
        String str1 = getIntent().getStringExtra('info');&#13;
        String selectedDate = getIntent().getStringExtra('Selected_date');&#13;
        //将数据传递至textview&#13;
        textView_2.setText(str1);&#13;
        textView_3.setText('我的出生日期为：'+selectedDate);&#13;
&#13;
6.6 完成。</description><guid isPermaLink="true">https://ParagonMkII.github.io/post/LZZExercise3.html</guid><pubDate>Thu, 17 Oct 2024 05:42:40 +0000</pubDate></item><item><title>LZZExercise2</title><link>https://ParagonMkII.github.io/post/LZZExercise2.html</link><description># 第一步&#13;
创建项目，点击Empty Views Activity&#13;
选择Java语言&#13;
# 第二步&#13;
## 创建工具栏&#13;
打开app/res/activity_main.xml&#13;
写入&#13;
&#13;
    &lt;androidx.appcompat.widget.Toolbar&#13;
        android:id='@+id/toolbar'&#13;
        android:layout_width='match_parent'&#13;
        android:layout_height='?attr/actionBarSize'&#13;
        android:background='?attr/colorPrimary'&#13;
        app:title='21251109999_XXX_23Button'&#13;
        app:titleTextColor='@android:color/white'/&gt;&#13;
&#13;
将app:title里的内容改为自己的学号与姓名&#13;
# 第三步&#13;
## 导入你的图片&#13;
打开app项目文件存放位置&#13;
&#13;
*例如我的：E:\AndroidProject\Exercise2r\app\src\main\res\drawable*&#13;
&#13;
把两张照片存入并改名为*before.jpg*与*after.jpg*&#13;
# 第四步&#13;
## 写入ImageView与Button&#13;
**由于Button标签无法改变背景颜色，故采用android.widget.Button**&#13;
***&#13;
写入activity_main.xml&#13;
&#13;
    &lt;LinearLayout&#13;
    android:layout_width='match_parent'&#13;
    android:layout_height='match_parent'&#13;
    android:gravity='center'&#13;
    android:orientation='vertical'&gt;&#13;
&#13;
    &lt;ImageView&#13;
        android:id='@+id/imageView'&#13;
        android:layout_width='400dp'&#13;
        android:layout_height='500dp'&#13;
        android:scaleType='centerCrop'&#13;
        android:src='@drawable/before2'&#13;
        android:layout_marginBottom='25dp' /&gt;&#13;
&#13;
    &lt;android.widget.Button&#13;
        android:id='@+id/button1'&#13;
        android:layout_width='220dp'&#13;
        android:background='@color/buttonBackgroundColor'&#13;
        android:layout_height='100dp'&#13;
        android:gravity='center'&#13;
        android:textSize='30dp'&#13;
        android:fontFamily='serif-monospace'&#13;
        android:text='21251109155'&#13;
        android:textStyle='bold'&#13;
        android:textColor='@color/buttonTextColor'&#13;
        android:layout_gravity='center_horizontal' /&gt;&#13;
    &lt;/LinearLayout&gt;&#13;
&#13;
*fontFamily*修改字体&#13;
*textSize*修改文字大小&#13;
*layout_width和layout_height*修改长与宽&#13;
***&#13;
## 修改颜色&#13;
**打开app/res/values/colors.xml**&#13;
在resources中写入&#13;
&#13;
    &lt;color name='buttonTextColor'&gt;#ffffff&lt;/color&gt;&#13;
    &lt;color name='buttonBackgroundColor'&gt;#000000&lt;/color&gt;&#13;
&#13;
可修改颜色#&#13;
# 第五步&#13;
## 实现跳转&#13;
### 1&#13;
**打开app/java/com.example.项目名/MainActivity.java**&#13;
**确保import的库**&#13;
&#13;
    import android.os.Bundle;&#13;
    import androidx.appcompat.app.AppCompatActivity;&#13;
    import androidx.appcompat.widget.Toolbar;&#13;
    import androidx.activity.EdgeToEdge;&#13;
    import androidx.core.graphics.Insets;&#13;
    import androidx.core.view.ViewCompat;&#13;
    import androidx.core.view.WindowInsetsCompat;&#13;
    import android.view.View;&#13;
    import android.widget.Button;&#13;
    import android.widget.ImageView;&#13;
&#13;
### 2&#13;
在public class MainActivity extends AppCompatActivity {下方写入&#13;
&#13;
    private ImageView imageView;&#13;
    private Button button;&#13;
&#13;
在setContentView(R.layout.activity_main);下方写入&#13;
&#13;
        Toolbar toolbar = findViewById(R.id.toolbar);&#13;
        setSupportActionBar(toolbar);&#13;
        imageView = findViewById(R.id.imageView);&#13;
        button = findViewById(R.id.button1);&#13;
        button.setOnClickListener(new View.OnClickListener() {&#13;
            @Override&#13;
            public void onClick(View view) {&#13;
                imageView.setImageResource(R.drawable.after);&#13;
                button.setText('21251109999\n名字');&#13;
            }&#13;
        });&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://ParagonMkII.github.io/post/LZZExercise2.html</guid><pubDate>Fri, 11 Oct 2024 15:49:47 +0000</pubDate></item><item><title>字符串比较</title><link>https://ParagonMkII.github.io/post/zi-fu-chuan-bi-jiao.html</link><description># 注意事项&#13;
字符串比较需要注意方法，使用equals&#13;
&#13;
    String name = '林黛玉';&#13;
    System.out.println(name.equals('林黛玉'); //True&#13;
    System.out.println('林黛玉'.equals(name)); //True【推荐：可以避免空指针】&#13;
。</description><guid isPermaLink="true">https://ParagonMkII.github.io/post/zi-fu-chuan-bi-jiao.html</guid><pubDate>Sun, 06 Oct 2024 16:06:27 +0000</pubDate></item><item><title>10/6</title><link>https://ParagonMkII.github.io/post/10-6.html</link><description>1。</description><guid isPermaLink="true">https://ParagonMkII.github.io/post/10-6.html</guid><pubDate>Sun, 06 Oct 2024 16:00:28 +0000</pubDate></item><item><title>计划9/25</title><link>https://ParagonMkII.github.io/post/ji-hua-9-25.html</link><description># 视频p114-150&#13;
## 扫描器&#13;
导入检测键盘输入的包：&#13;
`import java.util.Scanner;`&#13;
创建扫描器：&#13;
`Scanner myScanner = new Scanner(System.in);`&#13;
使用示例：&#13;
`int age = myScanner.nextInt();`。</description><guid isPermaLink="true">https://ParagonMkII.github.io/post/ji-hua-9-25.html</guid><pubDate>Wed, 25 Sep 2024 08:18:38 +0000</pubDate></item><item><title>第一个测试博客</title><link>https://ParagonMkII.github.io/post/di-yi-ge-ce-shi-bo-ke.html</link><description>Tell your world。</description><guid isPermaLink="true">https://ParagonMkII.github.io/post/di-yi-ge-ce-shi-bo-ke.html</guid><pubDate>Tue, 24 Sep 2024 14:10:34 +0000</pubDate></item></channel></rss>